-- Create table if it does not exist
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'cve' AND table_name = 'cve_records') THEN
        CREATE TABLE cve.cve_records (
            id SERIAL PRIMARY KEY,
            cve_id VARCHAR(20) NOT NULL,
            assigner_org_id VARCHAR(100) NOT NULL,
            assigner_short_name VARCHAR(100) NOT NULL,
            description TEXT,
            affected_product VARCHAR(255),
            affected_vendor VARCHAR(255),
            affected_version VARCHAR(255),
            date_published VARCHAR(255),
            date_rejected VARCHAR(255),
            date_reserved VARCHAR(255),
            date_updated VARCHAR(255),
            state VARCHAR(255),
            data_type VARCHAR(255),
            data_version VARCHAR(255),
            cve_references JSONB,
            raw_json JSONB
        );
        RAISE NOTICE 'Table cve.cve_records created.';
    ELSE
        RAISE NOTICE 'Table cve.cve_records already exists.';
    END IF;
END $$;
 
-- Create user if it does not exist
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'cve_user') THEN
        CREATE USER cve_user WITH PASSWORD 'notapassword';
        RAISE NOTICE 'User cve_user created.';
    ELSE
        RAISE NOTICE 'User cve_user already exists.';
    END IF;
END $$;
 
-- Grant privileges on database if not already granted
DO $$
BEGIN
    GRANT ALL PRIVILEGES ON DATABASE cve TO cve_user;
    RAISE NOTICE 'Granted all privileges on database cve to cve_user.';
END $$;
 
-- Grant privileges on schema if not already granted
DO $$
BEGIN
    GRANT ALL PRIVILEGES ON SCHEMA cve TO cve_user;
    RAISE NOTICE 'Granted all privileges on schema cve to cve_user.';
END $$;
 
-- Grant privileges on table if not already granted
DO $$
BEGIN
    GRANT ALL PRIVILEGES ON TABLE cve.cve_records TO cve_user;
    RAISE NOTICE 'Granted all privileges on table cve.cve_records to cve_user.';
END $$;
 
-- Grant usage and select on sequence if not already granted
DO $$
BEGIN
    GRANT USAGE, SELECT, UPDATE ON SEQUENCE cve.cve_records_id_seq TO cve_user;
    RAISE NOTICE 'Granted usage, select, update on sequence cve.cve_records_id_seq to cve_user.';
END $$;
 
-- Create index if it does not exist
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE schemaname = 'cve' AND tablename = 'cve_records' AND indexname = 'idx_cve_records_raw_json') THEN
        CREATE INDEX idx_cve_records_raw_json ON cve.cve_records USING gin (raw_json);
        RAISE NOTICE 'Index idx_cve_records_raw_json created on cve.cve_records.';
    ELSE
        RAISE NOTICE 'Index idx_cve_records_raw_json already exists on cve.cve_records.';
    END IF;
END $$;
