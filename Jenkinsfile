pipeline {
    agent any
    environment {
        GITHUB_CREDENTIALS_ID = 'GH_CRED'
        GITHUB_REPO_OWNER = 'cyse7125-su24-team11'
        GITHUB_REPO_NAME = 'webapp-cve-processor'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    changelog: false,
                    credentialsId: 'GH_CRED',
                    poll: false,
                    url: 'https://github.com/cyse7125-su24-team11/webapp-cve-processor.git'
            }
        }
        stage('Docker DB') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_CRED', usernameVariable: 'myuser', passwordVariable: 'docker_password'),
                usernamePassword(credentialsId: 'PG_CRED', usernameVariable: 'dbuser', passwordVariable: 'dbpassword')]) 
                {
                script {
                    try {
                        sh '''
                        docker login -u ${myuser} -p ${docker_password}
                        docker run --privileged --rm tonistiigi/binfmt --install all
                        
                        docker buildx build -f ./Dockerfile.db --build-arg username=${dbuser} --build-arg password=${dbpassword} -t pg-migration:latest --platform "linux/arm64,linux/amd64" .
                        '''
                    } catch (Exception e) {
                        throw e
                    }
                }
                }
            }    
        }
        stage('Docker APP') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER_CRED', usernameVariable: 'myuser', passwordVariable: 'docker_password')]) 
                {
                script {
                    try {
                        sh '''
                        docker login -u ${myuser} -p ${docker_password}
                        docker run --privileged --rm tonistiigi/binfmt --install all
                        
                        docker buildx build -f ./Dockerfile.app -t webapp-cve-processor:latest --platform "linux/arm64,linux/amd64" .
                        '''
                    } catch (Exception e) {
                        throw e
                    }
                }
                }
            }
            
        }
        stage('Semantic Release and Update Chart Version') {
            steps {
                withCredentials([usernamePassword(credentialsId: GITHUB_CREDENTIALS_ID, usernameVariable: 'GH_USERNAME', passwordVariable: 'GH_TOKEN')]) 
                {
                    withEnv(["GH_TOKEN=${GH_TOKEN}"]){
                        script {
                            sh '''
                            npm install semantic-release @semantic-release/exec @semantic-release/git
                            npx semantic-release
                            '''
                            def releaseOutput = sh(script: 'npx semantic-release --dry-run --json', returnStdout: true).trim()
                            echo "releaseOutput ${releaseOutput}"
                            def versionLine = releaseOutput.find(/Published release (\d+\.\d+\.\d+) on default channel/)
     
                            if (versionLine) {
                                // Extract the new version
                                def newVersion = (versionLine =~ /(\d+\.\d+\.\d+)/)[0][0]
                                echo "New version: v${newVersion}"
                                // Update Chart.yaml with the new version
    
                                sh '''
                                docker tag pg-migration:latest maheshpoojaryneu/csye7125:pg-migration-$new_version
                                docker push maheshpoojaryneu/csye7125:pg-migration-$new_version
                                
                                docker tag webapp-cve-processor:latest maheshpoojaryneu/csye7125:webapp-cve-processor-$new_version
                                docker push maheshpoojaryneu/csye7125:webapp-cve-processor-$new_version
                                '''
                            } else {
                                error "Failed to capture the new version from semantic-release."
                            }
                        }
                    }
                }
            }
        }
    }
}
// pipeline {
//     agent any
    
//     stages {
//         stage('Checkout') {
//             steps {
//                 git branch: 'main',
//                     changelog: false,
//                     credentialsId: 'GH_CRED',
//                     poll: false,
//                     url: 'https://github.com/cyse7125-su24-team11/webapp-cve-processor.git'
//             }
//         }
//         stage('Docker DB') {
//             steps {
//                 withCredentials([usernamePassword(credentialsId: 'DOCKER_CRED', usernameVariable: 'myuser', passwordVariable: 'docker_password'),
//                 usernamePassword(credentialsId: 'PG_CRED', usernameVariable: 'dbuser', passwordVariable: 'dbpassword')]) 
//                 {
//                 script {
//                     try {
//                         sh '''
//                         docker login -u ${myuser} -p ${docker_password}
//                         docker run --privileged --rm tonistiigi/binfmt --install all
//                         docker buildx build -f ./Dockerfile.db --build-arg username=${dbuser} --build-arg password=${dbpassword} -t pg-migration:latest --platform "linux/arm64,linux/amd64" .
//                         docker tag pg-migration:latest maheshpoojaryneu/csye7125:pg-migration
//                         docker push maheshpoojaryneu/csye7125:pg-migration
//                         docker system prune -f --volumes
//                         '''
//                     } catch (Exception e) {
//                         throw e
//                     }
//                 }
//                 }
//             }    
//         }
//         stage('Docker APP') {
//             steps {
//                 withCredentials([usernamePassword(credentialsId: 'DOCKER_CRED', usernameVariable: 'myuser', passwordVariable: 'docker_password')]) 
//                 {
//                 script {
//                     try {
//                         sh '''
//                         docker login -u ${myuser} -p ${docker_password}
//                         docker run --privileged --rm tonistiigi/binfmt --install all
//                         docker buildx build -f ./Dockerfile.app -t webapp-cve-processor:latest --platform "linux/arm64,linux/amd64" .
//                         docker tag webapp-cve-processor:latest maheshpoojaryneu/csye7125:webapp-cve-processor
//                         docker push maheshpoojaryneu/csye7125:webapp-cve-processor
//                         docker system prune -f --volumes
//                         '''
//                     } catch (Exception e) {
//                         throw e
//                     }
//                 }
//                 }
//             }
            
//         }
//     }
// }